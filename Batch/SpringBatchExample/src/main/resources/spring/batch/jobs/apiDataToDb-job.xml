<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

	<import resource="../config/context.xml" />
	<import resource="../config/database.xml" />

	<bean id="report" class="com.accenture.model.ResultModel" scope="prototype" />
	<bean id="itemProcessor" class="com.accenture.CustomItemProcessor" />

	<batch:job id="jsonToDbJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="jsonItemReader" writer="xmlItemWriter" processor="itemProcessor"
					commit-interval="10">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- 
	json string을 resource에서 받으면 안됨. 
	batch_job_execution_params 테이블에서 해당 resource 값을 STRING_VAL 에 넣기 때문.
	 -->
	<bean id="jsonItemReader" class="com.accenture.CustomItemReader" scope="step">

		<property name="resource" value="#{jobParameters[jsonStr]}" />
		<property name="lineMapper">
		    <bean class="com.accenture.JsonLineMapper">
		    </bean>
		</property>

	</bean>
	<!-- 
	<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">

		<property name="resource" value="classpath:cvs/input/report.csv" />

		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id,sales,qty,staffName,date" />
					</bean>
				</property>
				<property name="fieldSetMapper">
				    <bean class="com.accenture.ReportFieldSetMapper" />
				    
				    if no data type conversion, use BeanWrapperFieldSetMapper to map by name
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="report" />
					</bean>
					
				</property>
			</bean>
		</property>

	</bean> -->

	<bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="file:xml/outputs/report2.xml" />
		<property name="marshaller" ref="reportMarshaller" />
		<property name="rootTagName" value="report" />
	</bean>

	<bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.accenture.model.ResultModel</value>
			</list>
		</property>
	</bean>


</beans>